<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--Created by yFiles for HTML 2.2.0.3-->
<graphml xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml.html/2.0/ygraphml.xsd " xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:demostyle="http://www.yworks.com/yFilesHTML/demos/FlatDemoStyle/1.0" xmlns:icon-style="http://www.yworks.com/yed-live/icon-style/1.0" xmlns:bpmn="http://www.yworks.com/xml/yfiles-bpmn/2.0" xmlns:demotablestyle="http://www.yworks.com/yFilesHTML/demos/FlatDemoTableStyle/1.0" xmlns:uml="http://www.yworks.com/yFilesHTML/demos/UMLDemoStyle/1.0" xmlns:compat="http://www.yworks.com/xml/yfiles-compat-arrows/1.0" xmlns:GraphvizNodeStyle="http://www.yworks.com/yFilesHTML/graphviz-node-style/1.0" xmlns:VuejsNodeStyle="http://www.yworks.com/demos/yfiles-vuejs-node-style/1.0" xmlns:y="http://www.yworks.com/xml/yfiles-common/3.0" xmlns:x="http://www.yworks.com/xml/yfiles-common/markup/3.0" xmlns:sys="http://www.yworks.com/xml/yfiles-common/markup/primitives/2.0" xmlns:yjs="http://www.yworks.com/xml/yfiles-for-html/2.0/xaml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<key id="d0" for="node" attr.type="boolean" attr.name="Expanded" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/Expanded">
		<default>true</default>
	</key>
	<key id="d1" for="node" attr.type="string" attr.name="url"/>
	<key id="d2" for="node" attr.type="string" attr.name="description"/>
	<key id="d3" for="node" attr.name="NodeLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeLabels"/>
	<key id="d4" for="node" attr.name="NodeGeometry" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeGeometry"/>
	<key id="d5" for="all" attr.name="UserTags" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/UserTags"/>
	<key id="d6" for="node" attr.name="NodeStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/NodeStyle"/>
	<key id="d7" for="node" attr.name="NodeViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/NodeViewState"/>
	<key id="d8" for="edge" attr.type="string" attr.name="url"/>
	<key id="d9" for="edge" attr.type="string" attr.name="description"/>
	<key id="d10" for="edge" attr.name="EdgeLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeLabels"/>
	<key id="d11" for="edge" attr.name="EdgeGeometry" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeGeometry"/>
	<key id="d12" for="edge" attr.name="EdgeStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/EdgeStyle"/>
	<key id="d13" for="edge" attr.name="EdgeViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/EdgeViewState"/>
	<key id="d14" for="port" attr.name="PortLabels" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortLabels"/>
	<key id="d15" for="port" attr.name="PortLocationParameter" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortLocationParameter">
		<default>
			<x:Static Member="y:FreeNodePortLocationModel.NodeCenterAnchored"/>
		</default>
	</key>
	<key id="d16" for="port" attr.name="PortStyle" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/PortStyle">
		<default>
			<x:Static Member="y:VoidPortStyle.Instance"/>
		</default>
	</key>
	<key id="d17" for="port" attr.name="PortViewState" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/folding/1.1/PortViewState"/>
	<key id="d18" attr.name="SharedData" y:attr.uri="http://www.yworks.com/xml/yfiles-common/2.0/SharedData"/>
	<data key="d18">
		<y:SharedData>
			<yjs:SolidColorFill x:Key="1" color="#FF607D8B"/>
			<yjs:SolidColorFill x:Key="2" color="#FFA3F1BB"/>
			<yjs:SolidColorFill x:Key="3" color="#FF607D8B"/>
			<yjs:SolidColorFill x:Key="4" color="#FFA3F1BB"/>
			<yjs:Stroke x:Key="5" fill="#FF000000"/>
			<yjs:PolylineEdgeStyle x:Key="6" stroke="{y:GraphMLReference 5}">
				<yjs:PolylineEdgeStyle.sourceArrow>
					<yjs:Arrow type="DIAMOND" stroke="{y:GraphMLReference 5}" fill="#FFFFFFFF"/>
				</yjs:PolylineEdgeStyle.sourceArrow>
			</yjs:PolylineEdgeStyle>
			<yjs:Stroke x:Key="7" fill="#FF000000"/>
			<yjs:PolylineEdgeStyle x:Key="8" stroke="{y:GraphMLReference 7}">
				<yjs:PolylineEdgeStyle.targetArrow>
					<yjs:Arrow stroke="{y:GraphMLReference 7}" fill="#FF000000"/>
				</yjs:PolylineEdgeStyle.targetArrow>
			</yjs:PolylineEdgeStyle>
			<yjs:Stroke x:Key="9" fill="#FF000000"/>
			<yjs:PolylineEdgeStyle x:Key="10" stroke="{y:GraphMLReference 9}">
				<yjs:PolylineEdgeStyle.sourceArrow>
					<yjs:Arrow type="TRIANGLE" stroke="{y:GraphMLReference 9}" fill="#FFFFFFFF"/>
				</yjs:PolylineEdgeStyle.sourceArrow>
			</yjs:PolylineEdgeStyle>
			<yjs:Stroke x:Key="11" fill="#FF000000"/>
			<yjs:PolylineEdgeStyle x:Key="12" stroke="{y:GraphMLReference 11}">
				<yjs:PolylineEdgeStyle.sourceArrow>
					<yjs:Arrow type="TRIANGLE" stroke="{y:GraphMLReference 11}" fill="#FFFFFFFF"/>
				</yjs:PolylineEdgeStyle.sourceArrow>
			</yjs:PolylineEdgeStyle>
			<yjs:Stroke x:Key="13" fill="#FF000000"/>
			<yjs:Stroke x:Key="14" fill="#FF000000"/>
			<yjs:PolylineEdgeStyle x:Key="15" stroke="{y:GraphMLReference 14}">
				<yjs:PolylineEdgeStyle.sourceArrow>
					<yjs:Arrow type="DIAMOND" stroke="{y:GraphMLReference 14}" fill="#FFFFFFFF"/>
				</yjs:PolylineEdgeStyle.sourceArrow>
			</yjs:PolylineEdgeStyle>
			<yjs:PolylineEdgeStyle x:Key="16" stroke="{y:GraphMLReference 13}">
				<yjs:PolylineEdgeStyle.targetArrow>
					<yjs:Arrow stroke="{y:GraphMLReference 13}" fill="#FF000000"/>
				</yjs:PolylineEdgeStyle.targetArrow>
			</yjs:PolylineEdgeStyle>
		</y:SharedData>
	</data>
	<graph id="G" edgedefault="directed">
		<data key="d5">
			<y:Json>{"version":"2.0.0","theme":{"name":"light","version":"1.0.0"}}</y:Json>
		</data>
		<node id="n0">
			<data key="d4">
				<y:RectD X="-330.2419535859896" Y="-462" Width="454.1508007706318" Height="492"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Manager" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ recipes: Recipe[] = []]]></sys:String>
									<sys:String><![CDATA[+ modules: Module[] = []]]></sys:String>
									<sys:String><![CDATA[+ virtualServices: VirtualService[] = []]]></sys:String>
									<sys:String><![CDATA[+ player: Player[] = []]]></sys:String>
									<sys:String><![CDATA[+ variableArchive: VariableChange[] = []]]></sys:String>
									<sys:String><![CDATA[+ serviceArchive: ServiceLogEntry[] = []]]></sys:String>
									<sys:String><![CDATA[- _autoreset: boolean = true]]></sys:String>
									<sys:String><![CDATA[- _autoresetTimeout: number = 500]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Manager()]]></sys:String>
									<sys:String><![CDATA[+ getModule(moduleId: string)]]></sys:String>
									<sys:String><![CDATA[+ loadModule(options: LoadModuleOptions, protectedModules: boolean = false)]]></sys:String>
									<sys:String><![CDATA[+ removeModule(moduleId)]]></sys:String>
									<sys:String><![CDATA[+ getModules(): ModuleInterface[]]]></sys:String>
									<sys:String><![CDATA[+ getVirtualServices(): VirtualServiceInterface[]]]></sys:String>
									<sys:String><![CDATA[+ loadRecipe(options: recipeOptions, protectedRecipe: boolean = false): Recipe]]></sys:String>
									<sys:String><![CDATA[+ abortAllServices()]]></sys:String>
									<sys:String><![CDATA[+ stopAllServices()]]></sys:String>
									<sys:String><![CDATA[+ resetAllServices()]]></sys:String>
									<sys:String><![CDATA[+ publicRecipe(recipeId: string)]]></sys:String>
									<sys:String><![CDATA[+ getService(moduleName: string, serviceName: string): Service]]></sys:String>
									<sys:String><![CDATA[+ instantiateVirtualService(options: VirtualServiceOptions)]]></sys:String>
									<sys:String><![CDATA[+ removeVirtualService(virtualServiceId: string)]]></sys:String>
									<sys:String><![CDATA[- performAutoReset(service: Service)]]></sys:String>
									<sys:String><![CDATA[+ autoreset(): boolean]]></sys:String>
									<sys:String><![CDATA[+ autoreset(value: boolean)]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2">
				<data key="d15">
					<y:FreeNodePortLocationModelParameter Ratio="0.5,0.9893617021276595"/>
				</data>
			</port>
			<port name="p3"/>
		</node>
		<node id="n1">
			<data key="d4">
				<y:RectD X="-273.163325742972" Y="141.9375" Width="339.9935450845966" Height="412"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Player" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ recipeRuns: RecipeRun[]]]></sys:String>
									<sys:String><![CDATA[+ currentRecipeRun: RecipeRun]]></sys:String>
									<sys:String><![CDATA[+ repeat: Repeat]]></sys:String>
									<sys:String><![CDATA[- _currentItem: number]]></sys:String>
									<sys:String><![CDATA[- _status: RecipeState]]></sys:String>
									<sys:String><![CDATA[- _playlist: Recipe[] = []]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Player()]]></sys:String>
									<sys:String><![CDATA[+ playlist: Recipe[]]]></sys:String>
									<sys:String><![CDATA[+ currentItem(): number]]></sys:String>
									<sys:String><![CDATA[+ status()]]></sys:String>
									<sys:String><![CDATA[+ enqueue(recipe: Recipe): Player]]></sys:String>
									<sys:String><![CDATA[+ getCurrentRecipe(): Recipe]]></sys:String>
									<sys:String><![CDATA[+ remove(index: number): Player]]></sys:String>
									<sys:String><![CDATA[+ json(): PlayerInterface]]></sys:String>
									<sys:String><![CDATA[+ start()]]></sys:String>
									<sys:String><![CDATA[+ reset()]]></sys:String>
									<sys:String><![CDATA[+ pause()]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[+ forceTransition(stepName: string, nextStepName: string)]]></sys:String>
									<sys:String><![CDATA[- runCurrentRecipe(): Promise<void>]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
		</node>
		<node id="n2">
			<data key="d4">
				<y:RectD X="200.57977162512145" Y="252.75" Width="518.8404567497571" Height="380"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Recipe" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ id: string]]></sys:String>
									<sys:String><![CDATA[+ name: string]]></sys:String>
									<sys:String><![CDATA[+ options: RecipeOptions]]></sys:String>
									<sys:String><![CDATA[+ protected: boolean]]></sys:String>
									<sys:String><![CDATA[modules: Set<Module>]]></sys:String>
									<sys:String><![CDATA[+ initialStep: Step]]></sys:String>
									<sys:String><![CDATA[+ steps: Step[]]]></sys:String>
									<sys:String><![CDATA[+ currentStep: Step]]></sys:String>
									<sys:String><![CDATA[+ status: RecipeState]]></sys:String>
									<sys:String><![CDATA[+ lastChange: Date]]></sys:String>
									<sys:String><![CDATA[- stepListener: EventEmitter]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ RecipeRun(options: RecipeOptions, modules: Module[], protectedRecipe: boolean = false)]]></sys:String>
									<sys:String><![CDATA[+ json(): RecipeInterface]]></sys:String>
									<sys:String><![CDATA[+ connectModules(): Promise<void[]>]]></sys:String>
									<sys:String><![CDATA[+ start(): Promise<Recipe>]]></sys:String>
									<sys:String><![CDATA[+ pause()]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[- executeStep()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
			<port name="p4">
				<data key="d15">
					<y:FreeNodePortLocationModelParameter Ratio="0.9980800262594032,0.5"/>
				</data>
			</port>
			<port name="p5"/>
		</node>
		<node id="n3">
			<data key="d4">
				<y:RectD X="279.7745847060726" Y="819.9375" Width="360.4508305878548" Height="236"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Step" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ name: string]]></sys:String>
									<sys:String><![CDATA[+ operations: Operation[]]]></sys:String>
									<sys:String><![CDATA[+ transitions: Transition[]]]></sys:String>
									<sys:String><![CDATA[+ eventEmitter: StrictEventEmitter<EventEmitter, StepEvents>]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Step(options: StepOptions, modules: Modules[])]]></sys:String>
									<sys:String><![CDATA[+ getUsedModules(): Set<Module>]]></sys:String>
									<sys:String><![CDATA[+ execute()]]></sys:String>
									<sys:String><![CDATA[+ enterTransition(nextTransition: Transition)]]></sys:String>
									<sys:String><![CDATA[+ json(): StepInterface]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
		</node>
		<node id="n4">
			<data key="d4">
				<y:RectD X="859.625" Y="1029.9375" Width="338.2095856279309" Height="188"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Transition" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ nextStep: Step]]></sys:String>
									<sys:String><![CDATA[+ nextStepName: string]]></sys:String>
									<sys:String><![CDATA[+ condition: Condition]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Transition(options: TransitionOption, modules: Module[])]]></sys:String>
									<sys:String><![CDATA[+ getUsedModules(): Set<Module>]]></sys:String>
									<sys:String><![CDATA[+ json(): TransitionInterface]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0">
				<data key="d15">
					<y:FreeNodePortLocationModelParameter Ratio="0.007874015748031482,0.5"/>
				</data>
			</port>
			<port name="p1"/>
		</node>
		<node id="n5">
			<data key="d4">
				<y:RectD X="254.25000000000006" Y="1182.1875" Width="345.1120335913892" Height="300"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Operation" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[- MAX_RETRIES: number = 10]]></sys:String>
									<sys:String><![CDATA[- RETRY_DELAY: number = 500]]></sys:String>
									<sys:String><![CDATA[+ module: Module]]></sys:String>
									<sys:String><![CDATA[+ service: BaseService]]></sys:String>
									<sys:String><![CDATA[+ strategy: Strategy]]></sys:String>
									<sys:String><![CDATA[+ command: ServiceCommand]]></sys:String>
									<sys:String><![CDATA[+ parameterOptions: ParameterOptions[]]]></sys:String>
									<sys:String><![CDATA[+ emitter: EventEmitter]]></sys:String>
									<sys:String><![CDATA[- state: 'executing' | 'completed' | 'aborted']]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Operation(options: OperationOptions, modules: Module[])]]></sys:String>
									<sys:String><![CDATA[+ execute(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[+ json(): OperationInterface]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
		</node>
		<node id="n6">
			<data key="d4">
				<y:RectD X="-927.0625" Y="-314.8125" Width="519.840812411952" Height="508"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Module" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ option: ModuleOptions]]></sys:String>
									<sys:String><![CDATA[+ id: string]]></sys:String>
									<sys:String><![CDATA[+ services: Service[]]]></sys:String>
									<sys:String><![CDATA[+ variables: DataAssembly[]]]></sys:String>
									<sys:String><![CDATA[+ protected: boolean = false]]></sys:String>
									<sys:String><![CDATA[+ connection: OpcUaConnection]]></sys:String>
									<sys:String><![CDATA[- description: string]]></sys:String>
									<sys:String><![CDATA[- hmiUrl: string]]></sys:String>
									<sys:String><![CDATA[- logger: Category]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Module(options: ModuleOptions, protectedModule: boolean = false)]]></sys:String>
									<sys:String><![CDATA[+ getService(serviceName: string): Service]]></sys:String>
									<sys:String><![CDATA[+ getServiceStates(): ServiceInterface[]]]></sys:String>
									<sys:String><![CDATA[+ connect()]]></sys:String>
									<sys:String><![CDATA[+ disconnect(): Promise <void>]]></sys:String>
									<sys:String><![CDATA[+ json(): ModuleInterface]]></sys:String>
									<sys:String><![CDATA[+ isConnected(): boolean]]></sys:String>
									<sys:String><![CDATA[+ listenToDataAssembly(dataAssemblyName: string, variableName: string): DataItemEmitter]]></sys:String>
									<sys:String><![CDATA[+ abort(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ pause(): Promise<void[]>]]></sys:String>
									<sys:String><![CDATA[+ resume(): Promise<void[]>]]></sys:String>
									<sys:String><![CDATA[+ stop(): Promise<void[]>]]></sys:String>
									<sys:String><![CDATA[+ reset(): Promise <void[]>]]></sys:String>
									<sys:String><![CDATA[- subscribeToAllVariables(): Promise<DataAssembly[]>]]></sys:String>
									<sys:String><![CDATA[- unsubscribeFromAllVariables()]]></sys:String>
									<sys:String><![CDATA[- subscribeToAllServices()]]></sys:String>
									<sys:String><![CDATA[- unsubscribeFromAllServices()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
		</node>
		<node id="n7">
			<data key="d4">
				<y:RectD X="-566.4919535859897" Y="524.6875" Width="125" Height="92"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="ProcessValue" attributesOpen="false" operationsOpen="false">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n8">
			<data key="d4">
				<y:RectD X="-923.0610773512205" Y="971.5625" Width="511.8379671143929" Height="668"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Service" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ eventEmitter: ServiceEmitter]]></sys:String>
									<sys:String><![CDATA[+ strategies: Strategy[] = []]]></sys:String>
									<sys:String><![CDATA[+ parameters: WriteableDataAssembly[] = []]]></sys:String>
									<sys:String><![CDATA[+ connection: OpcUaConnection]]></sys:String>
									<sys:String><![CDATA[+ serviceControl: ServiceControl]]></sys:String>
									<sys:String><![CDATA[- logger: Category]]></sys:String>
									<sys:String><![CDATA[- serviceParametersEventEmitter: EventEmitter[]]]></sys:String>
									<sys:String><![CDATA[- _parentId: string]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Service(serviceOptions: ServiceOptions, connection: OpcUaConnection, parentId: string)]]></sys:String>
									<sys:String><![CDATA[+ getDefaultStrategy(): Strategy]]></sys:String>
									<sys:String><![CDATA[+ getCurrentStrategy(): Strategy]]></sys:String>
									<sys:String><![CDATA[+ subscribeToService(): Promise<ServiceEmitter>]]></sys:String>
									<sys:String><![CDATA[+ unsubscribe()]]></sys:String>
									<sys:String><![CDATA[+ json(): ServiceInterface]]></sys:String>
									<sys:String><![CDATA[+ executeCommand(command: ServiceCommand)]]></sys:String>
									<sys:String><![CDATA[+ start()]]></sys:String>
									<sys:String><![CDATA[+ restart()]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[+ reset()]]></sys:String>
									<sys:String><![CDATA[+ complete()]]></sys:String>
									<sys:String><![CDATA[+ abort()]]></sys:String>
									<sys:String><![CDATA[+ unhold()]]></sys:String>
									<sys:String><![CDATA[+ pause()]]></sys:String>
									<sys:String><![CDATA[+ resume()]]></sys:String>
									<sys:String><![CDATA[+ setStrategy(strategy: Strategy): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ getStrategyByNameOrDefault(strategyName: string)]]></sys:String>
									<sys:String><![CDATA[+ setParameters(parameterOptions: ParameterOptions[], modules: Module[] = [])]]></sys:String>
									<sys:String><![CDATA[+ setOperationMode()]]></sys:String>
									<sys:String><![CDATA[+ findInputParameter(parameterName: string): WriteableDataAssembly]]></sys:String>
									<sys:String><![CDATA[- clearListeners()]]></sys:String>
									<sys:String><![CDATA[- sendCommand(command:ServiceMtpCommand)]]></sys:String>
									<sys:String><![CDATA[+ qualifiedName()]]></sys:String>
									<sys:String><![CDATA[+ controlEnable(): ControlEnableInterface]]></sys:String>
									<sys:String><![CDATA[+ state(): ServiceState]]></sys:String>
									<sys:String><![CDATA[+ lastStatusChange(): Date]]></sys:String>
									<sys:String><![CDATA[+ currentStrategy()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
		</node>
		<node id="n9">
			<data key="d4">
				<y:RectD X="-224.47426276537755" Y="1675.4375" Width="425.47394863052244" Height="316"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Parameter" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ name: string]]></sys:String>
									<sys:String><![CDATA[+ value: string | number | boolean]]></sys:String>
									<sys:String><![CDATA[+ scopeArray: ScopeItem[]]]></sys:String>
									<sys:String><![CDATA[+ eventEmitter: StrictEventEmitter<EventEmitter, changed>]]></sys:String>
									<sys:String><![CDATA[+ continuous: boolean]]></sys:String>
									<sys:String><![CDATA[+ options: ParameterOptions]]></sys:String>
									<sys:String><![CDATA[- expression: Expression]]></sys:String>
									<sys:String><![CDATA[- logger: Category]]></sys:String>
									<sys:String><![CDATA[- active: boolean = false]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Parameter(parameterOptions: ParameterOptions, Modules: Module[] = []]]></sys:String>
									<sys:String><![CDATA[+ listenTiScopeArray(): EventEmitter]]></sys:String>
									<sys:String><![CDATA[+ unlistenToScopeArray()]]></sys:String>
									<sys:String><![CDATA[+ getValue(): number | boolean]]></sys:String>
									<sys:String><![CDATA[- notify()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
		</node>
		<node id="n10">
			<data key="d4">
				<y:RectD X="-864.0400932817222" Y="1949.25" Width="393.79599897539634" Height="300"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Strategy" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ id: string]]></sys:String>
									<sys:String><![CDATA[+ name: string]]></sys:String>
									<sys:String><![CDATA[+ defaultStrategy: boolean]]></sys:String>
									<sys:String><![CDATA[+ selfCompleting: boolean]]></sys:String>
									<sys:String><![CDATA[+ processValuesIn: WriteableDataAssembly[] = []]]></sys:String>
									<sys:String><![CDATA[+ processValuesOut: DataAssembly[] = []]]></sys:String>
									<sys:String><![CDATA[+ reportParameters: DataAssembly[] = []]]></sys:String>
									<sys:String><![CDATA[+ parameters: WriteableDataAssembly[] = []]]></sys:String>
									<sys:String><![CDATA[- logger: Categry]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Strategy(options: StrategyOptions, connection: OpcUaConnection)]]></sys:String>
									<sys:String><![CDATA[+ subscribe(): Promise<Strategy>]]></sys:String>
									<sys:String><![CDATA[+ unsubscribe()]]></sys:String>
									<sys:String><![CDATA[+ toJson(): StrategyInterface]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0">
				<data key="d15">
					<y:FreeNodePortLocationModelParameter Ratio="0.5,0.9893617021276595"/>
				</data>
			</port>
			<port name="p1"/>
		</node>
		<node id="n11">
			<data key="d4">
				<y:RectD X="-166" Y="-749.25" Width="125" Height="92"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 1}" highlightFill="{y:GraphMLReference 2}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="EventEmitter" attributesOpen="false" operationsOpen="false">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
			<port name="p4"/>
			<port name="p5"/>
			<port name="p6"/>
		</node>
		<node id="n12">
			<data key="d4">
				<y:RectD X="-909.75" Y="-526.25" Width="125" Height="92"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="#FF607D8B" highlightFill="#FFA3F1BB">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="DataAssembly" attributesOpen="false" operationsOpen="false">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n13">
			<data key="d4">
				<y:RectD X="-1416.75" Y="311.4375" Width="590.9827746236072" Height="476"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="&lt;&lt;abstract&gt;&gt; BaseService" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ eventEmitter: BaseServiceEmitter]]></sys:String>
									<sys:String><![CDATA[# _name: string]]></sys:String>
									<sys:String><![CDATA[# _selfCompleting: boolean = false]]></sys:String>
									<sys:String><![CDATA[# _lastStatusChange: Date = new Date()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[# BaseService()]]></sys:String>
									<sys:String><![CDATA[+ json(): BaseServiceInterface]]></sys:String>
									<sys:String><![CDATA[+ setParameters(parameters: Array<Parameter|ParameterOptions>, modules?: Module[]): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ isCommandExecutable(command: ServiceCommand): boolean]]></sys:String>
									<sys:String><![CDATA[+ executeCommand(command: ServiceCommand)]]></sys:String>
									<sys:String><![CDATA[+ waitForStateChange(expectedState: string): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ waitForStateChangeWithTimeout(expectedState: string, ms = 1000): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ start()]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[+ reset()]]></sys:String>
									<sys:String><![CDATA[+ complete()]]></sys:String>
									<sys:String><![CDATA[+ abort()]]></sys:String>
									<sys:String>unhold()</sys:String>
									<sys:String><![CDATA[+ pause()]]></sys:String>
									<sys:String><![CDATA[+ resume()]]></sys:String>
									<sys:String><![CDATA[+ restart()]]></sys:String>
									<sys:String><![CDATA[# selfCompleting(value: boolean)]]></sys:String>
									<sys:String><![CDATA[+ qualifiedName()]]></sys:String>
									<sys:String><![CDATA[+ name(): string]]></sys:String>
									<sys:String><![CDATA[+ lastStatusChange(): Date]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
		</node>
		<node id="n14">
			<data key="d4">
				<y:RectD X="-1809.9236336663912" Y="962.75" Width="486.27889215668637" Height="924"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="VirtualService" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string]]></sys:String>
									<sys:String><![CDATA[# procedureParameters: ParameterInterface[]]]></sys:String>
									<sys:String><![CDATA[# processValuesIn: ParameterInterface[]]]></sys:String>
									<sys:String><![CDATA[# processValuesOut: ParameterInterface[]]]></sys:String>
									<sys:String><![CDATA[# reportParameters: ParameterInterface[]]]></sys:String>
									<sys:String><![CDATA[# _controlEnable: ControlEnableInterface]]></sys:String>
									<sys:String><![CDATA[# _state: ServiceState = ServiceState.IDLE]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ VirtualService(name: string)]]></sys:String>
									<sys:String><![CDATA[+ json(): VirtualServiceInterface]]></sys:String>
									<sys:String><![CDATA[+ setParameters(parameters: Array<Parameter | ParameterOptions>): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ start()]]></sys:String>
									<sys:String><![CDATA[+ restart()]]></sys:String>
									<sys:String><![CDATA[+ pause()]]></sys:String>
									<sys:String><![CDATA[+ resume()]]></sys:String>
									<sys:String><![CDATA[+ complete()]]></sys:String>
									<sys:String><![CDATA[+ stop()]]></sys:String>
									<sys:String><![CDATA[+ abort()]]></sys:String>
									<sys:String><![CDATA[+ reset()]]></sys:String>
									<sys:String><![CDATA[+ unhold()]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
									<sys:String><![CDATA[# onStarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onRestarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onExecute(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onPausing(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onPaused(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onResuming(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onCompleting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onCompleted(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onResetting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onAborting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onAborted(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onStopping(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onStopped(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onIdle(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onUnholding(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- setState(newState: ServiceState)]]></sys:String>
									<sys:String><![CDATA[- setControlEnable(controlEnable: ControlEnableInterface)]]></sys:String>
									<sys:String><![CDATA[- gotoStarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoRestarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoExecute(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoPausing(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoPaused(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoResuming(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoCompleting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoCompleted(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoStopping(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoStopped(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoAborting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoAborted(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoResetting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoIdle(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- gotoUnholding(): Promise<void>]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
			<port name="p3"/>
			<port name="p4"/>
			<port name="p5"/>
			<port name="p6"/>
		</node>
		<node id="n15">
			<data key="d4">
				<y:RectD X="-2582.8127353162713" Y="809" Width="612.5570954564464" Height="108"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="VirtualServiceFactory" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object"/>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ create(options: VirtualServiceOptions, modules?: Module[], virtualServices?: VirtualService[]): VirtualService]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n16">
			<data key="d4">
				<y:RectD X="820.5935679103779" Y="-470" Width="691.1459705805914" Height="444"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="OpcUaConnection" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ endpoint: string]]></sys:String>
									<sys:String><![CDATA[+ id: string]]></sys:String>
									<sys:String><![CDATA[- session: ClientSession]]></sys:String>
									<sys:String><![CDATA[- client: OPCUAClient]]></sys:String>
									<sys:String><![CDATA[- subscription: ClientSubscription]]></sys:String>
									<sys:String><![CDATA[- monitoredItems: Map<string, ClientMonitoredItemBase>]]></sys:String>
									<sys:String><![CDATA[- namespaceArray: string[]]]></sys:String>
									<sys:String><![CDATA[- logger: Category]]></sys:String>
									<sys:String><![CDATA[- username: string]]></sys:String>
									<sys:String><![CDATA[- password: string]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ OpcUaConnection(moduleId: string, endpoint: string, username?: string, password?: string)]]></sys:String>
									<sys:String><![CDATA[+ connect(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ disconnect(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ isConnected(): boolean]]></sys:String>
									<sys:String><![CDATA[+ readOpcUaNode(nodeId: string, namespaceUrl: string)]]></sys:String>
									<sys:String><![CDATA[+ listenToOpcUaNode(nodeId: string, namespaceUrl: string, samplingInterval = 100): Promise<ClientMonitoredItemBase>]]></sys:String>
									<sys:String><![CDATA[+ writeIpcUaNode(nodeId: string, namespaceUrl: string, value: number | string | boolean, dataType)]]></sys:String>
									<sys:String><![CDATA[- resolveNodeId(nodeId: string, namespaceUrl: string)]]></sys:String>
									<sys:String><![CDATA[- readNameSpaceArray()]]></sys:String>
									<sys:String><![CDATA[- createAndConnectClient()]]></sys:String>
									<sys:String><![CDATA[- createSession()]]></sys:String>
									<sys:String><![CDATA[- createSubscription()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n17">
			<data key="d4">
				<y:RectD X="-1725.75" Y="2029" Width="202.06117389752046" Height="380"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Timer" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string = 'timer']]></sys:String>
									<sys:String><![CDATA[- durationMs: number]]></sys:String>
									<sys:String><![CDATA[- timestampStart: Date]]></sys:String>
									<sys:String><![CDATA[- elapsedTime: number]]></sys:String>
									<sys:String><![CDATA[- timerId: Timeout]]></sys:String>
									<sys:String><![CDATA[- timerUpdateId: Timeout]]></sys:String>
									<sys:String><![CDATA[- _remainingTime: number]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Timer(options)]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
									<sys:String><![CDATA[# onStarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onExecute()]]></sys:String>
									<sys:String><![CDATA[# onPausing(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onResuming(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onCompleting()]]></sys:String>
									<sys:String><![CDATA[# onAborting]]></sys:String>
									<sys:String><![CDATA[# onStopping()]]></sys:String>
									<sys:String><![CDATA[- remainingTime()]]></sys:String>
									<sys:String><![CDATA[- remainingTime(value: number)]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n18">
			<data key="d4">
				<y:RectD X="-1480.5" Y="2269" Width="156.37826786799" Height="140"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="Storage" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ Storage(name: string)]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0">
				<data key="d15">
					<y:FreeNodePortLocationModelParameter Ratio="0.5,0.9929577464788732"/>
				</data>
			</port>
		</node>
		<node id="n19">
			<data key="d4">
				<y:RectD X="-1413.7409260083577" Y="2029" Width="486.27889215668637" Height="204"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="PidController" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string = 'pidController']]></sys:String>
									<sys:String><![CDATA[- ctr: Controller]]></sys:String>
									<sys:String><![CDATA[- _output: number]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ PidController(name: string)]]></sys:String>
									<sys:String><![CDATA[+ setParameters(parameters: Array<Parameter | ParameterOptions>): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ onStarting()]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n20">
			<data key="d4">
				<y:RectD X="-1983.337714745665" Y="2029" Width="214.3988886431854" Height="300"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="FunctionGenerator" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string = 'functionGenerator']]></sys:String>
									<sys:String><![CDATA[+ startTime: Date]]></sys:String>
									<sys:String><![CDATA[- timerUpdateId: Timeout]]></sys:String>
									<sys:String><![CDATA[- expression: Expression]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ FunctionGenerator(name: string)]]></sys:String>
									<sys:String><![CDATA[+ onStarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[+ onPausing()]]></sys:String>
									<sys:String><![CDATA[+ onResuming()]]></sys:String>
									<sys:String><![CDATA[+ onCompleting()]]></sys:String>
									<sys:String><![CDATA[+ onAborting()]]></sys:String>
									<sys:String><![CDATA[+ onStopping()]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
									<sys:String><![CDATA[output(value: number)]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n21">
			<data key="d4">
				<y:RectD X="-2582.8127353162704" Y="1537.25" Width="545.5165975654767" Height="428"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="AggregatedService" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ type: string = 'aggregatedService']]></sys:String>
									<sys:String><![CDATA[+ modules: Set<Module>]]></sys:String>
									<sys:String><![CDATA[+ services: BaseService[]]]></sys:String>
									<sys:String><![CDATA[+ _lastStatusChange: Date]]></sys:String>
									<sys:String><![CDATA[- commandEnableExpression: CommandEnableOptions]]></sys:String>
									<sys:String><![CDATA[- options: AggregatedServiceOptions]]></sys:String>
									<sys:String><![CDATA[- stateMachines: Map<string, Petrinet>]]></sys:String>
									<sys:String><![CDATA[- logger: Category]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ AggregatedService(options: AggregatedServiceOptions, modules: Module[], virtualService[] = []]]></sys:String>
									<sys:String><![CDATA[# initParameter()]]></sys:String>
									<sys:String><![CDATA[# onStarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onRestarting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onExecute(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onPausing(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onResuming(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onCompleting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onResetting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onAborting(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onUnholding(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[# onHolding(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- runPetriNetOrDefault(petrinetName: string, command, stateName = null)]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
		</node>
		<node id="n22">
			<data key="d4">
				<y:RectD X="349.4076791624793" Y="-406" Width="221.1846416750415" Height="380"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="RecipeRun" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ id: string]]></sys:String>
									<sys:String><![CDATA[+ recipe: Recipe]]></sys:String>
									<sys:String><![CDATA[+ serviceLog: ServiceLogEntry[] = []]]></sys:String>
									<sys:String><![CDATA[+ variableLog: VariableChange[] = []]]></sys:String>
									<sys:String><![CDATA[- _startTime: Date]]></sys:String>
									<sys:String><![CDATA[- _endTime: Date]]></sys:String>
									<sys:String><![CDATA[- _status: RecipeState]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ RecipeRun(recipe: Recipe)]]></sys:String>
									<sys:String><![CDATA[+ json (): RecipeRunInterface]]></sys:String>
									<sys:String><![CDATA[+ start(): Promise<Recipe>]]></sys:String>
									<sys:String><![CDATA[+ stop(): Promise<void>]]></sys:String>
									<sys:String><![CDATA[- removeRecipeListeners()]]></sys:String>
									<sys:String><![CDATA[- onCompleted()]]></sys:String>
									<sys:String><![CDATA[- onStarted()]]></sys:String>
									<sys:String><![CDATA[- onChanged()]]></sys:String>
									<sys:String><![CDATA[+ startTime(): Date]]></sys:String>
									<sys:String><![CDATA[+ endTime(): Date]]></sys:String>
									<sys:String><![CDATA[status(): RecipeState]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
			<port name="p2"/>
		</node>
		<node id="n23">
			<data key="d4">
				<y:RectD X="946.5174384518841" Y="1715.4375" Width="545.5165975654767" Height="236"/>
			</data>
			<data key="d6">
				<uml:UMLNodeStyle fill="{y:GraphMLReference 3}" highlightFill="{y:GraphMLReference 4}">
					<uml:UMLNodeStyle.model>
						<uml:UMLClassModel stereotype="" constraint="" className="ScopeItem" attributesOpen="true" operationsOpen="true">
							<uml:UMLClassModel.attributes>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ name: string]]></sys:String>
									<sys:String><![CDATA[+ dataAssembly: DataAssembly]]></sys:String>
									<sys:String><![CDATA[+ module: Module]]></sys:String>
									<sys:String><![CDATA[+ variableName: string]]></sys:String>
									<sys:String><![CDATA[+ dataItem: DataItem<any>]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.attributes>
							<uml:UMLClassModel.operations>
								<x:Array Type="sys:Object">
									<sys:String><![CDATA[+ ScopeItem(name: string, module: Module, dataAssembly, variableName?: string)]]></sys:String>
									<sys:String><![CDATA[+ extractFromExpressionString(expression: string, modules: Module[], ignoredNames: string[] = []]]></sys:String>
									<sys:String><![CDATA[+ extractFromScopeOptions(item: ScopeOptions, modules: Module[]): ScopeItem]]></sys:String>
									<sys:String><![CDATA[+ extractFromExpressionVariable(variable: string, modules: Module[]): ScopeItem]]></sys:String>
								</x:Array>
							</uml:UMLClassModel.operations>
						</uml:UMLClassModel>
					</uml:UMLNodeStyle.model>
				</uml:UMLNodeStyle>
			</data>
			<port name="p0"/>
			<port name="p1"/>
		</node>
		<edge id="e0" source="n0" target="n1" sourceport="p0" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e1" source="n3" target="n4" sourceport="p0" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e2" source="n4" target="n3" sourceport="p1" targetport="p1">
			<data key="d11">
				<x:List>
					<y:Bend Location="1028.7297928139656,937.9375"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="8"/>
			</data>
		</edge>
		<edge id="e3" source="n3" target="n5" sourceport="p2" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e4" source="n0" target="n6" sourceport="p1" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e5" source="n6" target="n7" sourceport="p1" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e6" source="n6" target="n8" sourceport="p2" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e7" source="n5" target="n8" sourceport="p1" targetport="p1">
			<data key="d12">
				<y:GraphMLReference ResourceKey="8"/>
			</data>
		</edge>
		<edge id="e8" source="n5" target="n9" sourceport="p2" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="8"/>
			</data>
		</edge>
		<edge id="e9" source="n8" target="n10" sourceport="p2" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="6"/>
			</data>
		</edge>
		<edge id="e10" source="n11" target="n0" sourceport="p0" targetport="p2">
			<data key="d12">
				<y:GraphMLReference ResourceKey="10"/>
			</data>
		</edge>
		<edge id="e11" source="n11" target="n12" sourceport="p1" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="10"/>
			</data>
		</edge>
		<edge id="e12" source="n13" target="n8" sourceport="p0" targetport="p3">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e13" source="n13" target="n14" sourceport="p1" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e14" source="n15" target="n14" sourceport="p0" targetport="p1">
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
		<edge id="e15" source="n11" target="n10" sourceport="p2" targetport="p1">
			<data key="d11">
				<x:List>
					<y:Bend Location="1584,-507"/>
					<y:Bend Location="1584,2099.25"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e16" source="n11" target="n16" sourceport="p3" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e17" source="n14" target="n17" sourceport="p2" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e18" source="n14" target="n18" sourceport="p3" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e19" source="n14" target="n19" sourceport="p4" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e20" source="n14" target="n20" sourceport="p5" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e21" source="n14" target="n21" sourceport="p6" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e22" source="n0" target="n2" sourceport="p3" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="15"/>
			</data>
		</edge>
		<edge id="e23" source="n11" target="n2" sourceport="p4" targetport="p1">
			<data key="d11">
				<x:List>
					<y:Bend Location="165.5,-480.25"/>
					<y:Bend Location="165.5,25.5"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e24" source="n2" target="n3" sourceport="p2" targetport="p3">
			<data key="d11">
				<x:List>
					<y:Bend Location="460,747.375"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="15"/>
			</data>
		</edge>
		<edge id="e25" source="n11" target="n22" sourceport="p5" targetport="p0">
			<data key="d11">
				<x:List>
					<y:Bend Location="193,-502.80800454125347"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e26" source="n22" target="n2" sourceport="p1" targetport="p3">
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
		<edge id="e27" source="n11" target="n1" sourceport="p6" targetport="p1">
			<data key="d11">
				<x:List>
					<y:Bend Location="141,-465.5"/>
					<y:Bend Location="141,30.5"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="12"/>
			</data>
		</edge>
		<edge id="e28" source="n1" target="n22" sourceport="p2" targetport="p2">
			<data key="d11">
				<x:List>
					<y:Bend Location="103,195.9375"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
		<edge id="e29" source="n1" target="n2" sourceport="p3" targetport="p4">
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
		<edge id="e30" source="n9" target="n23" sourceport="p1" targetport="p0">
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
		<edge id="e31" source="n2" target="n23" sourceport="p5" targetport="p1">
			<data key="d11">
				<x:List>
					<y:Bend Location="1219.2757372346225,442.75"/>
				</x:List>
			</data>
			<data key="d12">
				<y:GraphMLReference ResourceKey="16"/>
			</data>
		</edge>
	</graph>
</graphml>